#########################################################################
# Copyright 2017-2018 VMware Inc.
# This file is part of VNF-ONboarding
# All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# For those usages not covered by the Apache License, Version 2.0 please
# contact:  osslegalrouting@vmware.com

###########################################################################

tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - types/vcloud.yaml

topology_template:
    inputs:
        template:
            type: string
            description: {{vim_params.vnf_description}}
            default: vnf_image
    node_templates: {% for vm in params %}
        VDU{{loop.index}}:
            type: vcloud.nodes.Server
            template: {get_input: template}
            capabilities:
                nfv_compute:
                    properties:{% if vm.flavor == 'auto' %}
                        mem_size: {{ vm.ram }}{% for x in range( vm.numberOfDisks ) %}
                        disk_size: {{ vm.disk[loop.index0] }}{% endfor %}
                        num_cpus: {{ vm.cpu }}
                        flavor_name: {{vm.flavorname}}{% if vm.memory_reservation %}
                        mem_page_size:  PREFER_LARGE{% else %}
                        mem_page_size:  SMALL{% endif %}{% if vm.numa_affinity %}
                        numa_node_count: {{ vm.number_numa_node }}{% endif %}{% if vm.latency_sensitivity %}
                        cpu_allocation:
                            cpu_affinity: DEDICATED{% else %}
                        cpu_allocation:
                            cpu_affinity: ANY{% endif %}{% else %}
                        flavor: {{ vm.flavor }}{% endif %}
            properties:
                image: {{ vm.image_id }}
        CP1{{loop.index}}:
            properties:
                name: {{ vm.nic1_name }}{% if vim_params.mgmt_network == vm.nic1_name %}
                management: true {% endif %}
                order: 0 {% if vm.Interfaces1_name %}
                type: {{ vm.Interfaces1_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic1_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% if vm.nic2_name %}
        CP2{{loop.index}}:
            properties:
                name: {{ vm.nic2_name }}{% if vim_params.mgmt_network == vm.nic2_name %}
                management: true {% endif %}
                order: 1 {% if vm.Interfaces2_name %}
                type: {{ vm.Interfaces2_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic2_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% endif %}{% if vm.nic3_name %}
        CP3{{loop.index}}:
            properties:
                name: {{ vm.nic3_name }}{% if vim_params.mgmt_network == vm.nic3_name %}
                management: true {% endif %}
                order: 2{% if vm.Interfaces3_name %}
                type: {{ vm.Interfaces3_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic3_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% endif %}{% if vm.nic4_name %}
        CP4{{loop.index}}:
            properties:
                name: {{ vm.nic4_name }}{% if vim_params.mgmt_network == vm.nic4_name %}
                management: true {% endif %}
                order: 3{% if vm.Interfaces4_name %}
                type: {{ vm.Interfaces4_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic4_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% endif %}{% if vm.nic5_name %}
        CP5{{loop.index}}:
            properties:
                name: {{ vm.nic5_name }}{% if vim_params.mgmt_network == vm.nic5_name %}
                management: true {% endif %}
                order: 4{% if vm.Interfaces5_name %}
                type: {{ vm.Interfaces5_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic5_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% endif %}{% if vm.nic6_name %}
        CP6{{loop.index}}:
            properties:
                name: {{ vm.nic6_name }}{% if vim_params.mgmt_network == vm.nic6_name %}
                management: true {% endif %}
                order: 5{% if vm.Interfaces6_name %}
                type: {{ vm.Interfaces6_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic6_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% endif %}{% if vm.nic7_name %}
        CP7{{loop.index}}:
            properties:
                name: {{ vm.nic7_name }}{% if vim_params.mgmt_network == vm.nic7_name %}
                management: true {% endif %}
                order: 6{% if vm.Interfaces7_name %}
                type: {{ vm.Interfaces7_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic7_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% endif %}{% if vm.nic8_name %}
        CP8{{loop.index}}:
            properties:
                name: {{ vm.nic8_name }}{% if vim_params.mgmt_network == vm.nic8_name %}
                management: true {% endif %}
                order: 7{% if vm.Interfaces8_name %}
                type: {{ vm.Interfaces8_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic8_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% endif %}{% if vm.nic9_name %}
        CP9{{loop.index}}:
            properties:
                name: {{ vm.nic9_name }}{% if vim_params.mgmt_network == vm.nic9_name %}
                management: true {% endif %}
                order: 8{% if vm.Interfaces9_name %}
                type: {{ vm.Interfaces9_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic9_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% endif %}{% if vm.nic10_name %}
        CP10{{loop.index}}:
            properties:
                name: {{ vm.nic10_name }}{% if vim_params.mgmt_network == vm.nic10_name %}
                management: true {% endif %}
                order: 9{% if vm.Interfaces10_name %}
                type: {{ vm.Interfaces10_name }}{% endif %}
            requirements:
                - virtualLink:
                    node: VL_{{ vm.nic10_name }}
                - virtualBinding:
                    node: VDU{{loop.index}}{% endif %}{% endfor %}{% if vim_params.mgmt_network %}
        VL_{{ vim_params.mgmt_network }}:
            properties:
                network_name: {{ vim_params.mgmt_network }}
                vendor: VMware {% if vim_params.mgmt_network in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.mgmt_network) }}{% endif %}{% endif %}{% if vim_params.Network1_name %}
        VL_{{ vim_params.Network1_name }}:
            properties:
                network_name: {{ vim_params.Network1_name }}
                vendor: VMware {% if vim_params.Network1_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network1_name) }}{% endif %}{% endif %}{% if vim_params.Network2_name %}
        VL_{{ vim_params.Network2_name }}:
            properties:
                network_name: {{ vim_params.Network2_name }}
                vendor: VMware {% if vim_params.Network2_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network2_name) }}{% endif %}{% endif %}{% if vim_params.Network3_name %}
        VL_{{ vim_params.Network3_name }}:
            properties:
                network_name: {{ vim_params.Network3_name }}
                vendor: VMware {% if vim_params.Network3_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network3_name) }}{% endif %}{% endif %}{% if vim_params.Network4_name %}
        VL_{{ vim_params.Network4_name }}:
            properties:
                network_name: {{ vim_params.Network4_name }}
                vendor: VMware {% if vim_params.Network4_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network4_name) }}{% endif %}{% endif %}{% if vim_params.Network5_name %}
       VL_{{ vim_params.Network5_name }}:
            properties:
                network_name: {{ vim_params.Network5_name }}
                vendor: VMware {% if vim_params.Network5_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network5_name) }}{% endif %}{% endif %}{% if vim_params.Network6_name %}
       VL_{{ vim_params.Network6_name }}:
            properties:
                network_name: {{ vim_params.Network6_name }}
                vendor: VMware {% if vim_params.Network6_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network6_name) }}{% endif %}{% endif %}{% if vim_params.Network7_name %}
       VL_{{ vim_params.Network7_name }}:
            properties:
                network_name: {{ vim_params.Network7_name }}
                vendor: VMware {% if vim_params.Network7_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network7_name) }}{% endif %}{% endif %}{% if vim_params.Network8_name %}
       VL_{{ vim_params.Network8_name }}:
            properties:
                network_name: {{ vim_params.Network8_name }}
                vendor: VMware {% if vim_params.Network8_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network8_name) }}{% endif %}{% endif %}{% if vim_params.Network9_name %}
       VL_{{ vim_params.Network9_name }}:
            properties:
                network_name: {{ vim_params.Network9_name }}
                vendor: VMware {% if vim_params.Network9_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network9_name) }}{% endif %}{% endif %}{% if vim_params.Network10_name %}
       VL_{{ vim_params.Network10_name }}:
            properties:
                network_name: {{ vim_params.Network10_name }}
                vendor: VMware {% if vim_params.Network10_name in vim_params['NeworOldNetwork'] %}
                cidr: {{ vim_params.NeworOldNetwork.get(vim_params.Network10_name) }}{% endif %}{% endif %}
